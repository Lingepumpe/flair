[project]
name = "flair"
version = "0.15.0"
description = "A very simple framework for state-of-the-art NLP"
readme = "README.md"
authors = [{ name = "Alan Akbik", email = "alan.akbik@gmail.com" }]
license = "MIT"
urls = { Homepage = "https://github.com/flairNLP/flair", Repository = "https://github.com/flairNLP/flair" }
requires-python = ">=3.9"

dependencies = [
  "bioc>=2.0.0,<3.0.0",
  "boto3>=1.20.27",
  "conllu>=4.0,<5.0.0",
  "deprecated>=1.2.13",
  "ftfy>=6.1.0",
  "gdown>=4.4.0",
  "huggingface-hub>=0.10.0",
  "langdetect>=1.0.9",
  "lxml>=4.8.0",
  "matplotlib>=2.2.3",
  "more-itertools>=8.13.0",
  "mpld3>=0.3",
  "pptree>=3.1",
  "python-dateutil>=2.8.2",
  "pytorch-revgrad>=0.2.0",
  "regex>=2022.1.18",
  "scikit-learn>=1.0.2",
  "segtok>=1.5.11",
  "sqlitedict>=2.0.0",
  "tabulate>=0.8.10",
  "torch>=1.5.0,!=1.8",
  "tqdm>=4.63.0",
  "transformer-smaller-training-vocab>=0.2.3",
  "transformers[sentencepiece]>=4.25.0,<5.0.0",
  "wikipedia-api>=0.5.7",
]

[project.optional-dependencies]
word-embeddings = ["gensim>=4.2.0", "bpemb>=0.3.5"]

[dependency-groups]
dev = [
  "konoha[janome]<6.0.0",
  "mypy>=1.14.1",
  "pyab3p>=0.1.1",
  "pytest>=8.3.4",
  "pytest-github-actions-annotate-failures>=0.3.0",
  "pytest-mypy>=0.10.3",
  "pytest-ruff>=0.4.1",
  "ruff>=0.9.2",
  "types-dataclasses>=0.6.6",
  "types-deprecated>=1.2.15.20241117",
  "types-requests>=2.31.0.6",
  "types-tabulate>=0.9.0.20241207",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.pytest.ini_options]
addopts = "--mypy --ruff"
filterwarnings = [
  "error",                                                                                                                                                                               # Convert all warnings to errors
  'ignore:torch.tensor results are registered as constants in the trace. You can safely ignore this warning if you use this function to create tensors out of constant variables',       # Distilbert warning
  'ignore:TorchScript will treat type annotations of Tensor:UserWarning',                                                                                                                # Torch onnx export warns about it ignoring types, however we still like types.
  'ignore:Please use `triu` from the `scipy.linalg` namespace, the `scipy.linalg.special_matrices` namespace is deprecated.',                                                            # ignore gensim using deprecated scipy
  'ignore:bilinear is deprecated and will be removed in Pillow 10',                                                                                                                      # huggingface layoutlmv2 has deprecated calls.
  'ignore:nearest is deprecated and will be removed in Pillow 10',                                                                                                                       # huggingface layoutlmv2 has deprecated calls.
  'ignore:The `device` argument is deprecated and will be removed in v5 of Transformers.',                                                                                               # hf layoutlmv3 calls deprecated hf.
  "ignore:the imp module is deprecated:DeprecationWarning:past",                                                                                                                         # ignore DeprecationWarning from hyperopt dependency
  "ignore:.*imp module.*:DeprecationWarning",                                                                                                                                            # ignore DeprecationWarnings that involve imp module
  "ignore:The class LayoutLMv3FeatureExtractor is deprecated and will be removed in version 5 of Transformers. Please use LayoutLMv3ImageProcessor instead.",                            # huggingface layoutlmv3 has deprecated calls.
  "ignore:pkg_resources",                                                                                                                                                                # huggingface has deprecated calls.
  'ignore:Deprecated call to `pkg_resources',                                                                                                                                            # huggingface has deprecated calls.
  'ignore:distutils Version classes are deprecated.',                                                                                                                                    # faiss uses deprecated distutils.
  'ignore:`resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.', # transformers calls deprecated hf_hub
  "ignore:`torch.cuda.amp.GradScaler",                                                                                                                                                   # GradScaler changes in torch 2.3.0 but we want to be backwards compatible.
  "ignore:`clean_up_tokenization_spaces` was not set",                                                                                                                                   # Default behavior changes in transformers v4.45, raising irrelevant FutureWarning for serialized models.
  "ignore:1Torch was not compiled with flash attention",                                                                                                                                 # You might want to install flash attention, but you don't have to.
]
markers = ["integration"]
testpaths = ["flair", "tests"]

[tool.mypy]
ignore_missing_imports = true
check_untyped_defs = true
warn_unused_ignores = true
disable_error_code = ["annotation-unchecked"]
exclude = [".git/", ".venv/", "__pycache__", "build", "venv"]

[[tool.mypy.overrides]]
module = "flair.embeddings.legacy"
ignore_errors = true

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["ALL"] # Uncommit to autofix all the things
#select = [
#  "C4",
#  "COM",
#  "D",
#  "E",
#  "EXE",
#  "F",
#  "I",
#  "INP",
#  "ISC",
#  "NPY",
#  "PD",
#  "PGH",
#  "PIE",
#  "PLE",
#  "PYI",
#  "Q",
#  "RSE",
#  "RUF",
#  "SIM",
#  "T10",
#  "TID",
#  "UP",
#  "W",
#  "YTT",
#]

ignore = [
  "COM812", # Do not force trailing commas for function argument lists
  "D100",   # Don't force presence of docstrings (D100-D107)
  "D101",
  "D102",
  "D103",
  "D104",
  "D105",
  "D107",
  "E501",   # Ignore line too long
]

unfixable = [
  "B905",   # Don't automatically add strict=False to calls of zip()
  "ERA",    # Do not delete commented code
  "EXE001", # Do not check python files for executability, doesn't work well on windows
  "EXE002", # Do not check python files for executability, doesn't work well on windows
  "F841",   # Do not remove unused variables automatically
]

[tool.ruff.lint.per-file-ignores]
"flair/embeddings/legacy.py" = ["D205"]
"scripts/*" = ["INP001"]                #  no need for __init__.py for scripts
"flair/datasets/*" = ["D417"]           # need to fix datasets in a unified way later.

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pydocstyle]
match = "^(?!legacy).*\\.py$"
